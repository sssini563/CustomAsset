# Customizable image: PHP 8.3 + Apache, with vendor installed from composer (no dev, no scripts)
# Intended as an alternative to the upstream snipe/snipe-it base.

# 1) Runtime stage: PHP 8.3 Apache with necessary extensions (build extensions first)
FROM php:8.3-apache

# Install system dependencies for PHP extensions
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    libzip-dev \
    libicu-dev \
    git \
    unzip \
  && rm -rf /var/lib/apt/lists/*

# PHP extensions (gd, pdo_mysql, exif, zip, bcmath, intl)
RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
  && docker-php-ext-install -j"$(nproc)" gd pdo_mysql exif zip bcmath intl \
  && docker-php-ext-enable opcache

# Enable Apache modules commonly needed by Laravel
RUN a2enmod rewrite headers expires

# Apache vhost configuration (DocumentRoot = /var/www/html/public)
COPY docker/apache/000-default.conf /etc/apache2/sites-available/000-default.conf

# PHP overrides
COPY docker/php-custom.ini /usr/local/etc/php/conf.d/99-custom.ini

WORKDIR /var/www/html

# Copy all app code first (composer.json autoload needs database folder to exist)
COPY . /var/www/html

# 2) Install composer dependencies
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer
RUN composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader --no-scripts \
  && rm /usr/bin/composer

# Create internal data dir and storage subdirectories if used by app
RUN mkdir -p /var/lib/snipeit \
  && mkdir -p /var/www/html/storage/framework/{cache,sessions,views} \
  && mkdir -p /var/www/html/storage/logs \
  && mkdir -p /var/www/html/bootstrap/cache \
  && chown -R www-data:www-data /var/lib/snipeit /var/www/html \
  && chmod +x /var/www/html/artisan \
  && rm -f /var/www/html/bootstrap/cache/*.php

# Create entrypoint script to generate .env from environment variables at runtime
RUN echo '#!/bin/bash\n\
set -e\n\
# Generate .env file from environment variables if it does not exist\n\
if [ ! -f /var/www/html/.env ]; then\n\
  echo "Generating .env from environment variables..."\n\
  env | grep -E "^(APP_|DB_|CACHE_|SESSION_|QUEUE_|REDIS_|MAIL_|PRIVATE_|PUBLIC_|IMAGE_|REQUIRE_|SAML|LDAP|BACKUP_|ENABLE_)" > /var/www/html/.env || true\n\
fi\n\
# Execute the original command\n\
exec "$@"\n\
' > /usr/local/bin/docker-entrypoint.sh \
  && chmod +x /usr/local/bin/docker-entrypoint.sh

EXPOSE 80

ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
CMD ["apache2-foreground"]
